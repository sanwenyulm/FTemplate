<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iotyun.manager.mapper.SensorDataMapper">
  <resultMap id="BaseResultMap" type="com.iotyun.manager.entity.SensorData">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="sensorid" jdbcType="INTEGER" property="sensorid" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="device_addr" jdbcType="INTEGER" property="deviceAddr" />
    <result column="device_offset" jdbcType="INTEGER" property="deviceOffset" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="value_cons" jdbcType="INTEGER" property="valueCons" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, sensorid, type, device_addr, device_offset, value, value_cons, unit, state, create_at, 
    update_at, status
  </sql>
  <select id="selectByExample" parameterType="com.iotyun.manager.entity.SensorDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sensor_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
     <if test="startRow != null and pageSize != null and pageSize != 0">  
     limit #{startRow,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}  
     </if> 
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sensor_data
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sensor_data
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.iotyun.manager.entity.SensorDataExample">
    delete from sensor_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iotyun.manager.entity.SensorData">
    insert into sensor_data (Id, sensorid, type, 
      device_addr, device_offset, value, 
      value_cons, unit, state, 
      create_at, update_at, status
      )
    values (#{id,jdbcType=INTEGER}, #{sensorid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{deviceAddr,jdbcType=INTEGER}, #{deviceOffset,jdbcType=INTEGER}, #{value,jdbcType=VARCHAR}, 
      #{valueCons,jdbcType=INTEGER}, #{unit,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iotyun.manager.entity.SensorData">
    insert into sensor_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="sensorid != null">
        sensorid,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="deviceAddr != null">
        device_addr,
      </if>
      <if test="deviceOffset != null">
        device_offset,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="valueCons != null">
        value_cons,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sensorid != null">
        #{sensorid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="deviceAddr != null">
        #{deviceAddr,jdbcType=INTEGER},
      </if>
      <if test="deviceOffset != null">
        #{deviceOffset,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="valueCons != null">
        #{valueCons,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iotyun.manager.entity.SensorDataExample" resultType="java.lang.Long">
    select count(*) from sensor_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sensor_data
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sensorid != null">
        sensorid = #{record.sensorid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.deviceAddr != null">
        device_addr = #{record.deviceAddr,jdbcType=INTEGER},
      </if>
      <if test="record.deviceOffset != null">
        device_offset = #{record.deviceOffset,jdbcType=INTEGER},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.valueCons != null">
        value_cons = #{record.valueCons,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null">
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sensor_data
    set Id = #{record.id,jdbcType=INTEGER},
      sensorid = #{record.sensorid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      device_addr = #{record.deviceAddr,jdbcType=INTEGER},
      device_offset = #{record.deviceOffset,jdbcType=INTEGER},
      value = #{record.value,jdbcType=VARCHAR},
      value_cons = #{record.valueCons,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iotyun.manager.entity.SensorData">
    update sensor_data
    <set>
      <if test="sensorid != null">
        sensorid = #{sensorid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="deviceAddr != null">
        device_addr = #{deviceAddr,jdbcType=INTEGER},
      </if>
      <if test="deviceOffset != null">
        device_offset = #{deviceOffset,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="valueCons != null">
        value_cons = #{valueCons,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iotyun.manager.entity.SensorData">
    update sensor_data
    set sensorid = #{sensorid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      device_addr = #{deviceAddr,jdbcType=INTEGER},
      device_offset = #{deviceOffset,jdbcType=INTEGER},
      value = #{value,jdbcType=VARCHAR},
      value_cons = #{valueCons,jdbcType=INTEGER},
      unit = #{unit,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>